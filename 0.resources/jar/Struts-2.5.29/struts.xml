<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE struts PUBLIC 
	"-//Apache Software Foundation//DTD Struts Configuration 2.3//EN" 
	"http://struts.apache.org/dtds/struts-2.3.dtd">
<struts>
    <!-- Struts2 全局常量设置 -->
	<!--  可以受理请求的扩展名-->
	<constant name="struts.actoin.extension" value="action,do,html" />
	<!-- 修改当前 Struts2 应用的主题 -->
	<constant name="struts.ui.theme" value="simple" />
    <!-- 是否启用开发模式 -->
    <constant name="struts.devMode" value="true" />
    <!-- Struts2配置文件改动后，是否重新加载 -->
    <constant name="struts.configuration.xml.reload" value="true" />
    <!-- 设置浏览器是否缓存静态内容 -->
    <constant name="struts.serve.static.browserCache" value="false" />
    <!-- 请求参数的编码方式 -->
    <constant name="struts.i18n.encoding" value="UTF-8" />
    <!-- 每次 HTTP 请求系统都重新加载资源文件，有助于开发 -->
    <constant name="struts.i18n.reload" value="true" />
    <!-- 文件上传最大值 -->
    <constant name="struts.multipart.maxSize" value="104857600" />
    <!-- 让struts2支持动态方法调用 -->
    <constant name="struts.enable.DynamicMethodInvocation" value="true" />
    <!-- Action 名称中是否能应用斜线 -->
    <constant name="struts.enable.SlashesInActionNames" value="false" />
    <!-- 允许标签中使用表达式语法 -->
    <constant name="struts.tag.altSyntax" value="true" />
    <!-- 对于WebLogic,Orion,OC4J此属性应该设置成true -->
    <constant name="struts.dispatcher.parametersWorkaround" value="false" />
	<!-- 配置国际化资源文件 -->
	<constant name="struts.custom.i18n.resoureces" value="i18n" />

	<!-- package 配置 -->
	<!--
		Struts2 使用 package 来组织模块,其提供了将多个 Action 组织为一个模块的方式,要求 name 必须是唯一的
		 - package 可以扩展,当一个 package 扩展自另一个 package 时,
		   该 package 会在本身配置的基础上,加入扩展的 package 的配置
		 - 父 package 必须在子 package 前配置
		 - package 默认继承 struts-default
		   例：<package name="default" extends="struts-default">
		
		参数说明:
         - name：package名称
         - extends: 继承的父 package 名称
         - abstract: 设置 package 的属性为抽象的,此时 package 不能定义 action,取值 true/false
         - namespace: 定义 package 命名空间,该命名空间影响到 url 的地址,默认为 /
		   请求路径：项目名+包下的命名空间名+访问的Action名
           例如: 此命名空间为 /test 那么访问是的地址为 http://localhost:8080/项目名/test/XX.action
     -->
    <package name="default" extends="struts-default" namespace="/">
	    <!-- 拦截器配置 -->
		<!--
		    interceptor: 拦截器定义
			 参数说明:
			  - name: 拦截器名称
			  - class: 拦截器类路径
			interceptor-stack: 拦截器栈定义
			 参数说明：
			  - name: 拦截器栈名称
		-->
    	<interceptors>
            <interceptor name="" class=""></interceptor>
            <interceptor name="" class=""></interceptor>

            <interceptor-stack name=>
                <interceptor-ref name=""></interceptor-ref>
                <interceptor-ref name=""></interceptor-ref>
            </interceptor-stack>
        </interceptors>
        
        <!-- 默认拦截器配置 -->
		<!-- 
		     每个 Action 都会自动引用默认拦截器
             如果 Action 中引用了其它的拦截器，那么默认的拦截器将无效
        -->
        <default-interceptor-ref name=""></default-interceptor-ref>
		
	    <!-- Action 配置 -->
		<!-- 
		    action：一个 Struts 请求就是一个 Action,每个 Action 类可以映射多个 action 结点(action 的 name 不同)
             参数说明：
			  - name：创建的 Action 的名称，不包含扩展名 .action
              - class: 对应 Action 的路径
              - method: 调用 Action 中的方法
			exception-mapping: 声明式异常配置
			 需在 result 返回的结果页面中与 <s:property value="exception.message"> 结合使用
			 参数说明:
			  - result: 出现异常时,指定一个响应结果,该响应结果可来自于当前 action 标签中的 result 声明,
			            也可由 global-results 标签中的 result 声明
			  - exception: 声明捕获异常类型,需异常的全类名
			result: 返回结果配置,一个 action 执行后可能返回的一个结果，一个 action 结点可能有多个 result 结点
			 参数说明：
              - name: result 名称,与 Action 中所调用方法的返回值相同
              - type: result 类型
			    - dispatcher: 默认,转发
				- chain: 转发到一个 Action
				- redirect: 重定向
				- redirectAction: 重定向到一个 Action
			param: 参数配置
			 参数说明:
			  - name: 对应 Action 中的 get/set 方法
			interceptor-ref: 引用拦截器--
			 参数说明：
			  - name: 拦截器名称或拦截器栈名称
        -->
        <action name="" class="" method="">
		    <exception-mapping result="" exception=""></exception-mapping>
         	<result name="">/xxx.jsp</result>
        	<param name="url">http://www.xxx.com</param>
            <interceptor-ref name=""></interceptor-ref>
        </action>
        
        <!-- 全局 results 配置 -->
		<!-- 一般用于配置访问错误页面 -->
        <global-results>
            <result name="">/error.jsp</result>
        </global-results>
		<!-- 全局声明式异常配置配置 -->
		<global-exception-mapping>
		    <exception-mapping result="" exception=""></exception-mapping>
		</global-exception-mapping>
    </package>
</struts>